{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Downloads/shootsta/src/components/WordList.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WordList = _ref => {\n  let {\n    words\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px\"\n    },\n    children: words.map((_ref2, index) => {\n      let {\n        word,\n        meanings\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wordContainer\",\n        children: [\"Word Number \", ++index, \" : \", word, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: meanings.map(_ref3 => {\n            let {\n              definitions\n            } = _ref3;\n            return definitions.map(_ref4 => {\n              let {\n                definition\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: definition\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 86\n              }, this);\n            });\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WordList;\nexport default WordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["WordList","words","margin","map","index","word","meanings","definitions","definition"],"sources":["/home/lenovo/Downloads/shootsta/src/components/WordList.tsx"],"sourcesContent":["import { Word } from \"../interfaces\"\n\ntype WordListType = {\n  words: Word[]\n}\n\nconst WordList: React.FC<WordListType> = ({ words }) => {\n  return (\n    <div style={{margin:\"20px\"}}>\n      {words.map(({ word, meanings }, index) => {\n        return (\n          <div key={index} className=\"wordContainer\">\n            Word Number {++index} : {word}\n            <ul>\n              {meanings.map(({ definitions }) => definitions.map(({ definition }) => <li>{definition}</li>))}\n            </ul>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default WordList"],"mappings":";;;AAMA,MAAMA,QAAgC,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EACtD,oBACE;IAAK,KAAK,EAAE;MAACC,MAAM,EAAC;IAAR,CAAZ;IAAA,UACGD,KAAK,CAACE,GAAN,CAAU,QAAqBC,KAArB,KAA+B;MAAA,IAA9B;QAAEC,IAAF;QAAQC;MAAR,CAA8B;MACxC,oBACE;QAAiB,SAAS,EAAC,eAA3B;QAAA,2BACe,EAAEF,KADjB,SAC2BC,IAD3B,eAEE;UAAA,UACGC,QAAQ,CAACH,GAAT,CAAa;YAAA,IAAC;cAAEI;YAAF,CAAD;YAAA,OAAqBA,WAAW,CAACJ,GAAZ,CAAgB;cAAA,IAAC;gBAAEK;cAAF,CAAD;cAAA,oBAAoB;gBAAA,UAAKA;cAAL;gBAAA;gBAAA;gBAAA;cAAA,QAApB;YAAA,CAAhB,CAArB;UAAA,CAAb;QADH;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA,GAAUJ,KAAV;QAAA;QAAA;QAAA;MAAA,QADF;IAQD,CATA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAfD;;KAAMJ,Q;AAiBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}